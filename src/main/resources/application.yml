spring:
  application:
    name: tournament
  datasource:
    url: jdbc:postgresql://192.168.1.89:9432/sensation
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        show-sql: true
#        default_schema: sensation
        default_schema: public
        # Таймаут блокировки в миллисекундах (10 секунд)
        jdbc.lock_timeout: 10000
  transaction:
    default-timeout: 30s  # Глобальный таймаут транзакций
  liquibase:
    enabled: true
    change-log: classpath:/db/changelog/db.changelog-master.yaml
#    default_schema: sensation
    default_schema: public
    liquibase-schema: public
  docker:
    compose:
      enabled: true
      file: docker-compose/docker-compose.yml
#       Необязательно, но полезно:
#       profiles:
#         active: dev
#       lifecycle-management: start_and_stop  # или start_only
#       readiness:
#         timeout: 2m

server:
  servlet:
    session:
      timeout: 24h  # Время жизни сессии (24 часа)
      cookie:
        name: JSESSIONID  # Имя cookie сессии
        max-age: 86400    # Максимальный возраст cookie в секундах (24 часа)
        http-only: true   # Cookie доступен только через HTTP (безопасность)
        secure: false     # Cookie передается только по HTTPS (false для разработки)
        same-site: lax    # Политика SameSite для защиты от CSRF

app:
  swagger-ui:
    api-version: 1.0
    api-title: 'Sensation tournament'
    api-description: 'api for \"tournament\" module'
    contact-name: Lena or Dima
    contact-email: belkanafan@gmail.com

logging:
  level:
    liquibase: INFO
#    org.springframework.web.servlet.resource.ResourceHttpRequestHandler: WARN
#    org.springframework.web.servlet.DispatcherServlet: WARN
#    org.springframework.web: WARN