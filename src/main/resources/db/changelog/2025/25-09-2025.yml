databaseChangeLog:
  # Create activity_result table
  - changeSet:
      id: 2025-09-25-1
      author: belkanaphan
      onFail: MARK_RAN
      changes:
        - sql:
            sql: |
              CREATE TABLE IF NOT EXISTS activity_result (
                id BIGSERIAL PRIMARY KEY,
                total_score INTEGER NOT NULL,
                place INTEGER,
                participant_id BIGINT NOT NULL,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                created_by VARCHAR(255),
                modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                modified_by VARCHAR(255),
                version BIGINT NOT NULL DEFAULT 0,
                FOREIGN KEY (participant_id) REFERENCES participant(id) ON DELETE CASCADE
              );
      rollback:
        - sql:
            sql: |
              DROP TABLE IF EXISTS activity_result;

  # Create milestone_result table
  - changeSet:
      id: 2025-09-25-2
      author: belkanaphan
      onFail: MARK_RAN
      changes:
        - sql:
            sql: |
              CREATE TABLE IF NOT EXISTS milestone_result (
                id BIGSERIAL PRIMARY KEY,
                total_score INTEGER,
                participant_id BIGINT NOT NULL,
                milestone_id BIGINT NOT NULL,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                created_by VARCHAR(255),
                modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                modified_by VARCHAR(255),
                version BIGINT NOT NULL DEFAULT 0,
                FOREIGN KEY (participant_id) REFERENCES participant(id) ON DELETE CASCADE,
                FOREIGN KEY (milestone_id) REFERENCES milestone(id) ON DELETE CASCADE
              );
      rollback:
        - sql:
            sql: |
              DROP TABLE IF EXISTS milestone_result;

  # Create participant_round_result table
  - changeSet:
      id: 2025-09-25-3
      author: belkanaphan
      onFail: MARK_RAN
      changes:
        - sql:
            sql: |
              CREATE TABLE IF NOT EXISTS participant_round_result (
                id BIGSERIAL PRIMARY KEY,
                score INTEGER,
                favorite BOOLEAN NOT NULL DEFAULT FALSE,
                participant_id BIGINT NOT NULL,
                round_id BIGINT NOT NULL,
                milestone_criteria_id BIGINT NOT NULL,
                activity_user_id BIGINT NOT NULL,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                created_by VARCHAR(255),
                modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                modified_by VARCHAR(255),
                version BIGINT NOT NULL DEFAULT 0,
                FOREIGN KEY (participant_id) REFERENCES participant(id) ON DELETE CASCADE,
                FOREIGN KEY (round_id) REFERENCES round(id) ON DELETE CASCADE,
                FOREIGN KEY (milestone_criteria_id) REFERENCES milestone_criteria_assignment(id) ON DELETE CASCADE,
                FOREIGN KEY (activity_user_id) REFERENCES user_activity_assignment(id) ON DELETE CASCADE
              );
      rollback:
        - sql:
            sql: |
              DROP TABLE IF EXISTS participant_round_result;
