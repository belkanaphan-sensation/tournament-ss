databaseChangeLog:
  # Create activity_user table
  - changeSet:
      id: 2025-09-15-1
      author: belkanaphan
      context: prod
      onFail: MARK_RAN
      changes:
        - sql:
            sql: |
              CREATE TABLE IF NOT EXISTS activity_user (
                id BIGSERIAL PRIMARY KEY,
                user_id BIGINT NOT NULL,
                activity_id BIGINT NOT NULL,
                position VARCHAR(50) NOT NULL,
                partner_side VARCHAR(20),
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                created_by VARCHAR(255),
                modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                modified_by VARCHAR(255),
                FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
                FOREIGN KEY (activity_id) REFERENCES activity(id) ON DELETE CASCADE,
                UNIQUE (user_id, activity_id)
              );
      rollback:
        - sql:
            sql: |
              DROP TABLE IF EXISTS activity_user;

  # Create criterion table
  - changeSet:
      id: 2025-09-15-2
      author: belkanaphan
      context: prod
      onFail: MARK_RAN
      changes:
        - sql:
            sql: |
              CREATE TABLE IF NOT EXISTS criterion (
                id BIGSERIAL PRIMARY KEY,
                name VARCHAR(255) NOT NULL,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                created_by VARCHAR(255),
                modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                modified_by VARCHAR(255)
              );
      rollback:
        - sql:
            sql: |
              DROP TABLE IF EXISTS criterion;

  # Create milestone_criterion table
  - changeSet:
      id: 2025-09-15-3
      author: belkanaphan
      context: prod
      onFail: MARK_RAN
      changes:
        - sql:
            sql: |
              CREATE TABLE IF NOT EXISTS milestone_criterion (
                id BIGSERIAL PRIMARY KEY,
                milestone_rule_id BIGINT NOT NULL,
                criterion_id BIGINT NOT NULL,
                partner_side VARCHAR(20),
                weight DECIMAL(10,2) NOT NULL DEFAULT 1.0,
                scale INTEGER,
                priority INTEGER NOT NULL DEFAULT 0,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                created_by VARCHAR(255),
                modified_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                modified_by VARCHAR(255),
                FOREIGN KEY (milestone_rule_id) REFERENCES milestone_rule(id) ON DELETE CASCADE,
                FOREIGN KEY (criterion_id) REFERENCES criterion(id) ON DELETE CASCADE,
                UNIQUE (milestone_rule_id, criterion_id, partner_side)
              );
      rollback:
        - sql:
            sql: |
              DROP TABLE IF EXISTS milestone_criterion;
